#!/bin/bash
#speedwriting a vt102/ansi 'loader' for fake POC
#quick travel down memory lane from iCE days
#yes the code could be cleaner but when you're doing it
#on a phone while traveling you skip clean steps
#@kehlarn
#suggested https://twitter.com/postmodern_mod3/status/1345185325799260161
#response https://twitter.com/kehlarn/status/1345611585369194498
a1=" _                                __       _            _           _                                  _     _        __                "
a2="| |__   ___    ___ __ _ _ __ ___ / _|_   _| | __      _| |__   __ _| |_   _   _  ___  _   _  __      _(_)___| |__    / _| ___  _ __     "
a3="| '_ \ / _ \  / __/ _\` | '__/ _ \ |_| | | | | \ \ /\ / / '_ \ / _\` | __| | | | |/ _ \| | | | \ \ /\ / / / __| '_ \  | |_ / _ \| '__|    "
a4="| |_) |  __/ | (_| (_| | | |  __/  _| |_| | |  \ V  V /| | | | (_| | |_  | |_| | (_) | |_| |  \ V  V /| \__ \ | | | |  _| (_) | | _ _ _ "
a5="|_.__/ \___|  \___\__,_|_|  \___|_|  \__,_|_|   \_/\_/ |_| |_|\__,_|\__|  \__, |\___/ \__,_|   \_/\_/ |_|___/_| |_| |_|  \___/|_|(_|_|_)"
a6="                                                                          |___/                                                         "
a7="you might get it"
a8="are you not entertained?"
a9="@KeHLaRN/iCE/2021"
work=("reticulating splines" "degaussing llamas" "defenestrating captchas" "wickedness achieved" "# id" "uid=0(root) gid=0(root) groups=0(root)")
workd=15
workl=0

function vtmove() { echo -ne "\033[${1};${2}H"; }
function vtcls() { echo -e "\033[1J\033[J"; }
function vthide() { echo -e "\033[?25l"; }
function vtshow() { echo -e "\033[?25h"; }
function vtmode() { echo -e "\033[${1}m"; }
function vtup() { echo -e "\033[S"; }
function vtdown() { echo -e "\033[T"; }
function abs() { local r=$(($1-$2));echo ${r#-}; }

function bounce() {
    local w=0;
    while :;do
        w=$(($w+1))
        for i in $(seq $(($w*2/3)));do
            vtup;sleep 0.04;
        done;sleep 0.08;
        for i in $(seq $w);do
            vtdown;sleep 0.04;
        done;sleep 0.08;
        #w=$(($w+1))
        #for i in $(seq $w);do
        #    vtdown;
        #done;sleep 0.50;
        if [[ $w -gt 4 ]]; then 
            for i in $(seq $w);do
                vtup;sleep 0.03;done
            vtshow;exit; fi
    done
}

width=${#a1}
mod=$(($width-80))
o=0
a=7
b=0
c=0
d=40
i=1
j=-1
k=2
m=-1
n=-1
t=$width
s=$((80-${#a7}+1))
#u=(1 4 5 7) vt102
u=(33 31 36 35)
v=w=0
gobounce=0
vthide
trap "vtshow;echo done;exit" SIGINT

function sidescroll() {
    eval local k=\$$2
    vtmode 0
    vtmode ${u[$((($v+$w+$3)%${#u[@]}))]}
    vtmove $1 0;
    echo -n "${k:$(($o+00)):20}";
    vtmode ${u[$((($v+$w+$4)%${#u[@]}))]}
    vtmove $1 20;
    echo -n "${k:$(($o+20)):20}";
    w=$((($w+1)%${#u[@]}))
    vtmode ${u[$((($v+$w+$5)%${#u[@]}))]}
    vtmove $1 40;
    echo -n "${k:$(($o+40)):20}";
    vtmode ${u[$((($v+$w+$6)%${#u[@]}))]}
    vtmove $1 60;
    echo -n "${k:$(($o+60)):20}";
    w=$((($w+1)%${#u[@]}))
}
while :; do
    vtcls
    v=$((($v+1)%${#u[@]}))
    sidescroll 1 a1 0 1 2 3
    sidescroll 2 a2 3 2 1 0
    sidescroll 3 a3 2 3 0 1
    sidescroll 4 a4 1 0 3 2
    sidescroll 5 a5 3 0 1 2
    sidescroll 6 a6 2 1 0 3
    vtmode 0
    #----
    vtmode 1;vtmode 32;vtmove $c $d;echo -ne "$a8";vtmode 0 #entertained
    if [[ $(($c+$m)) -ge 7 ]]; then m=-$m; fi
    if [[ $(($c+$m)) -le 0 ]]; then m=-$m; fi
    if [[ $(($d+$n)) -gt $((80-${#a8}+2)) ]]; then n=-$n; fi
    if [[ $(($d+$n)) -le 0 ]]; then n=-$n; fi
    #----
    if [[ $(($o+$i)) -ge $mod ]]; then i=-$i; fi
    if [[ $(($o+$i)) -le 0 ]]; then i=-$i; fi
    o=$((($o + $i))) #%$mod))
    #----
    vtmode 5
    if [[ $(abs $a $c) -le 1 ]]; then 
        if [[ $b -le $(($d+${#a8})) ]] && [[ $(($b+${#a7})) -ge $d ]]; then
            j=-$j;
            m=-$m;
            vtmode 7
        fi
    fi
    vtmode 1;vtmode 32;vtmove $a $b;echo -ne "$a7";vtmode 0 #might get it
    if [[ $(($a+$j)) -ge 7 ]]; then j=-$j; fi
    if [[ $(($a+$j)) -le 0 ]]; then j=-$j; fi
    if [[ $(($b+$k)) -gt $((80-${#a7}+2)) ]]; then k=-$k; fi
    if [[ $(($b+$k)) -le 0 ]]; then k=-$k; fi
    #----
    c=$((($c+$m)))
    d=$((($d+$n)))
    a=$((($a+$j)))
    b=$((($b+$k)))
    vtmode 1;vtmode 33;
    vtmove 7 $((80-${#a9}))
    echo -ne "${a9}" #me
    vtmode 7;vtmode 31;
    if [[ $(($workl+1)) -lt $((${#work[@]}-1)) ]]; then
        vtmove $((8+$workl)) 10
        echo -ne "${work[$workl]}"
        if [[ $workd -le 0 ]]; then
            workd=30
            workl=$(($workl+1));
        fi
        workd=$(($workd-1))
        #if [[ $(($workl+1)) -eq $((${#work[@]}-1)) ]]; then
        #    vtmove 9 10
        #    echo -ne "${work[$workl]}"
        #fi
    fi
    vtmove $((8+$workl)) 10
    echo -ne "${work[$workl]}"
    if [[ $(($workl+1)) -eq $((${#work[@]}-1)) ]]; then
        vtmove $((8+$workl+1)) 10
        echo -ne "${work[$(($workl+1))]}"
        if [[ $gobounce -gt 25 ]]; then
            bounce
        fi
    fi
    gobounce=$(($gobounce+1))
    vtmode 0
    sleep 0.11
done
